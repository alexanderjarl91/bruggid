[{"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\Map.js":"1","C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\styled\\shared\\buttons.js":"2","C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\styled\\breweryDetailsStyled.js":"3","C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\BreweriesNearYou.js":"4","C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\App.js":"5"},{"size":4084,"mtime":1607092076167,"results":"6","hashOfConfig":"7"},{"size":829,"mtime":1607091632997,"results":"8","hashOfConfig":"7"},{"size":1143,"mtime":1607091632956,"results":"9","hashOfConfig":"7"},{"size":1955,"mtime":1607190332787,"results":"10","hashOfConfig":"7"},{"size":2224,"mtime":1607091632938,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vvzu6j",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\Map.js",["22","23"],"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\styled\\shared\\buttons.js",[],"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\styled\\breweryDetailsStyled.js",[],"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\BreweriesNearYou.js",["24","25"],"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\App.js",["26","27","28","29"],{"ruleId":"30","severity":1,"message":"31","line":15,"column":10,"nodeType":"32","messageId":"33","endLine":15,"endColumn":17},{"ruleId":"30","severity":1,"message":"34","line":17,"column":8,"nodeType":"32","messageId":"33","endLine":17,"endColumn":20},{"ruleId":"30","severity":1,"message":"35","line":7,"column":12,"nodeType":"32","messageId":"33","endLine":7,"endColumn":28},{"ruleId":"30","severity":1,"message":"36","line":7,"column":30,"nodeType":"32","messageId":"33","endLine":7,"endColumn":49},{"ruleId":"30","severity":1,"message":"37","line":11,"column":8,"nodeType":"32","messageId":"33","endLine":11,"endColumn":11},{"ruleId":"30","severity":1,"message":"38","line":26,"column":10,"nodeType":"32","messageId":"33","endLine":26,"endColumn":19},{"ruleId":"30","severity":1,"message":"39","line":29,"column":10,"nodeType":"32","messageId":"33","endLine":29,"endColumn":27},{"ruleId":"40","severity":1,"message":"41","line":33,"column":13,"nodeType":"42","endLine":37,"endColumn":4},"no-unused-vars","'BackBtn' is defined but never used.","Identifier","unusedVar","'BeerOfTheDay' is defined but never used.","'nearestBreweries' is assigned a value but never used.","'setNearestBreweries' is assigned a value but never used.","'Nav' is defined but never used.","'breweries' is assigned a value but never used.","'filteredBreweries' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]
[{"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\BeerList.js":"1","C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\Map.js":"2","C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\reportWebVitals.js":"3","C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\App.js":"4"},{"size":1570,"mtime":1606857175837,"results":"5","hashOfConfig":"6"},{"size":3784,"mtime":1606929633363,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1606748513276,"results":"8","hashOfConfig":"6"},{"size":1422,"mtime":1606918869935,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vvzu6j",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\BeerList.js",[],"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\components\\Map.js",[],"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\reportWebVitals.js",[],"C:\\Users\\Björg\\Documents\\Vefþróun\\Development\\bruggid\\src\\App.js",["18","19","20"],{"ruleId":"21","severity":1,"message":"22","line":18,"column":10,"nodeType":"23","messageId":"24","endLine":18,"endColumn":19},{"ruleId":"21","severity":1,"message":"25","line":21,"column":10,"nodeType":"23","messageId":"24","endLine":21,"endColumn":27},{"ruleId":"26","severity":1,"message":"27","line":25,"column":13,"nodeType":"28","endLine":30,"endColumn":4},"no-unused-vars","'breweries' is assigned a value but never used.","Identifier","unusedVar","'filteredBreweries' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]
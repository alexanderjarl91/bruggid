[{"/Users/alexanderjarl/Documents/Skóli/brewery_react/src/reportWebVitals.js":"1","/Users/alexanderjarl/Documents/Skóli/brewery_react/src/App.js":"2","/Users/alexanderjarl/Documents/Skóli/brewery_react/src/components/Brewery.js":"3","/Users/alexanderjarl/Documents/Skóli/brewery_react/src/components/Beer.js":"4"},{"size":362,"mtime":1606583360433,"results":"5","hashOfConfig":"6"},{"size":1052,"mtime":1606599770575,"results":"7","hashOfConfig":"6"},{"size":1391,"mtime":1606599622528,"results":"8","hashOfConfig":"6"},{"size":534,"mtime":1606587507112,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13mpmtb",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexanderjarl/Documents/Skóli/brewery_react/src/reportWebVitals.js",[],"/Users/alexanderjarl/Documents/Skóli/brewery_react/src/App.js",["18","19"],"/Users/alexanderjarl/Documents/Skóli/brewery_react/src/components/Brewery.js",[],"/Users/alexanderjarl/Documents/Skóli/brewery_react/src/components/Beer.js",[],{"ruleId":"20","severity":1,"message":"21","line":10,"column":10,"nodeType":"22","messageId":"23","endLine":10,"endColumn":19},{"ruleId":"24","severity":1,"message":"25","line":17,"column":13,"nodeType":"26","endLine":21,"endColumn":4},"no-unused-vars","'breweries' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]
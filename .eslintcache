[{"/Users/alexanderjarl/Desktop/bruggid/src/App.js":"1","/Users/alexanderjarl/Desktop/bruggid/src/components/BreweryListItem.js":"2","/Users/alexanderjarl/Desktop/bruggid/src/components/Map.js":"3","/Users/alexanderjarl/Desktop/bruggid/src/components/BreweryList.js":"4","/Users/alexanderjarl/Desktop/bruggid/src/components/BeerList.js":"5","/Users/alexanderjarl/Desktop/bruggid/src/reportWebVitals.js":"6","/Users/alexanderjarl/Desktop/bruggid/src/components/Nav.js":"7","/Users/alexanderjarl/Desktop/bruggid/src/index.js":"8","/Users/alexanderjarl/Desktop/bruggid/src/components/Sort.js":"9","/Users/alexanderjarl/Desktop/bruggid/src/components/BeerListItem.js":"10"},{"size":1375,"mtime":1606769639660,"results":"11","hashOfConfig":"12"},{"size":663,"mtime":1606846972278,"results":"13","hashOfConfig":"12"},{"size":1668,"mtime":1606844309289,"results":"14","hashOfConfig":"12"},{"size":3109,"mtime":1606844517605,"results":"15","hashOfConfig":"12"},{"size":1511,"mtime":1606846230732,"results":"16","hashOfConfig":"12"},{"size":362,"mtime":1606752903998,"results":"17","hashOfConfig":"12"},{"size":244,"mtime":1606753731976,"results":"18","hashOfConfig":"12"},{"size":500,"mtime":1606752903998,"results":"19","hashOfConfig":"12"},{"size":437,"mtime":1606839315207,"results":"20","hashOfConfig":"12"},{"size":526,"mtime":1606846213199,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1862844",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexanderjarl/Desktop/bruggid/src/App.js",["43","44","45"],"//import libraries\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//import components\nimport Map from \"./components/Map\";\nimport BeerList from \"./components/BeerList\";\nimport BreweryList from \"./components/BreweryList\";\n\n//import style\nimport \"./App.css\";\n\nfunction App() {\n  //STATES\n\n  //declare original state, never altered nor displayed\n  const [breweries, setBreweries] = useState([]);\n\n  //declare filtered version of original state, this one is used for displaying\n  const [filteredBreweries, setFilteredBreweries] = useState([]);\n\n  //Fetching data from Brugg API using axios and the useEffect hook. breweries state will be set to the data and passed through props to children\n  //SKOÐA WARNING UM CALLBACKS\n  useEffect(async () => {\n    const result = await axios(\"https://brugg-api.herokuapp.com/breweries\");\n    setBreweries(result.data);\n    setFilteredBreweries(result.data);\n    console.log(result.data);\n  }, []);\n\n  //returning components\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/breweries\" component={BreweryList} />\n          <Route path=\"/beers\" component={BeerList} />\n          <Route path=\"/\" exact component={Map} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/alexanderjarl/Desktop/bruggid/src/components/BreweryListItem.js",[],"/Users/alexanderjarl/Desktop/bruggid/src/components/Map.js",[],"/Users/alexanderjarl/Desktop/bruggid/src/components/BreweryList.js",[],"/Users/alexanderjarl/Desktop/bruggid/src/components/BeerList.js",[],"/Users/alexanderjarl/Desktop/bruggid/src/reportWebVitals.js",[],"/Users/alexanderjarl/Desktop/bruggid/src/components/Nav.js",[],"/Users/alexanderjarl/Desktop/bruggid/src/index.js",[],"/Users/alexanderjarl/Desktop/bruggid/src/components/Sort.js",[],"/Users/alexanderjarl/Desktop/bruggid/src/components/BeerListItem.js",[],{"ruleId":"46","severity":1,"message":"47","line":18,"column":10,"nodeType":"48","messageId":"49","endLine":18,"endColumn":19},{"ruleId":"46","severity":1,"message":"50","line":21,"column":10,"nodeType":"48","messageId":"49","endLine":21,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":25,"column":13,"nodeType":"53","endLine":30,"endColumn":4},"no-unused-vars","'breweries' is assigned a value but never used.","Identifier","unusedVar","'filteredBreweries' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]